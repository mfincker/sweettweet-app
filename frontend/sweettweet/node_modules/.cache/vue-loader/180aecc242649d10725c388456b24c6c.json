{"remainingRequest":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/src/App.vue","mtime":1580742254240},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKICBmb250LWZhbWlseTogJ0F2ZW5pcicsIEhlbHZldGljYSwgQXJpYWwsIHNhbnMtc2VyaWY7CiAgLXdlYmtpdC1mb250LXNtb290aGluZzogYW50aWFsaWFzZWQ7CiAgLW1vei1vc3gtZm9udC1zbW9vdGhpbmc6IGdyYXlzY2FsZTsKICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgCn0KZm9vdGVyIHsKICBjb2xvcjogI2YyZjJmMjsKICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmU1NzczOwogIHBhZGRpbmc6IDIwcHggMHB4IDEwcHggMHB4OwogIGZvbnQtc2l6ZTogOHB0Owp9CmZvb3RlciA+IHNwYW4gewogIGZvbnQtc2l6ZTogMTBwdDsKfQojYmFubmVyIHsKICBjb2xvcjogd2hpdGU7CiAgYmFja2dyb3VuZC1jb2xvcjogIzZlNTc3MzsKICBwYWRkaW5nOiAxMHB4IDBweDsKfQoKI2Jhbm5lciA+IGgxIHsKICBjb2xvcjogd2hpdGU7CiAgZm9udC1zaXplOiA1MHB0OwogIG1hcmdpbi1ib3R0b206IDBweDsKfQojYmFubmVyID4gcCB7CiAgZm9udC1zaXplOiAxNXB0Owp9CmJ1dHRvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Q0NWQ3OTsKICBib3JkZXI6IDFweCBzb2xpZCAjZDQ1ZDc5Owp9CgpidXR0b246aG92ZXIgewogIGJhY2tncm91bmQtY29sb3I6ICM2ZTU3NzM7CiAgYm9yZGVyOiAxcHggc29saWQgIzZlNTc3Mzs7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div id='banner'>\n      <h1>SweetTweet</h1>\n      <p>Helping you prevent hypoglycemia</p>\n    </div>\n    <user-form @add:userInfo=\"setUserInfo\" />\n    <glucose-form @add:newBG=\"addNewBG\" />\n    <glucose-vis :data=\"data\"/>\n\n    <footer>\n      <span>&copy; Maeva Fincker - 2020</span>\n      <br>\n      Developped with Flask and Vue.js\n    </footer>\n  </div>\n</template>\n\n<script>\nimport GlucoseVis from '@/components/GlucoseVis.vue'\nimport GlucoseForm from '@/components/GlucoseForm.vue'\nimport UserForm from '@/components/UserForm.vue'\n\n// Change base_url when deployed - Flask server base_url\nconst base_url = 'http://127.0.0.1:5000/'\n\nexport default {\n  name: 'app',\n  components: {\n    GlucoseVis,\n    GlucoseForm,\n    UserForm\n  },\n\n  data() {\n    return {\n      newBG: \"\",\n      alarm: 0,\n      userInfo: {},\n      data: [],\n    }\n  },\n\n  methods: {\n\n\n    setUserInfo(userInfo) {\n      this.userInfo = userInfo\n      this.userInfo.height = this.userInfo.feet * 0.3048 + this.userInfo.inch * 0.0254\n      this.userInfo.bmi = this.userInfo.weight * 0.453 / (this.userInfo.height * this.userInfo.height)\n    },\n\n    // POST new BG measurement - returns full live glucose data + model output - TODO\n    async addNewBG(newBG) {\n      try {\n        const response = await fetch(base_url + 'api/update-glucose/', {\n          method: 'POST',\n          body: JSON.stringify({'newBG' : newBG,\n                                'data': this.data,\n                                'alarm' : this.alarm,\n                                'userInfo' : this.userInfo}),\n          headers: {'Content-type' : 'application/json; charset=UTF-8', }\n        })\n        const data = await response.json() // server should return the phone number\n        this.newBG = data.newBG\n        this.data = data.data\n        this.alarm = data.alarm\n        this.userInfo = this.userInfo\n      } catch(error) {\n        console.error(error)\n      }\n    },\n\n    // Get live pastData from user session\n    async getGlucoseData() {\n      try {\n        const response = await fetch(base_url + 'api/glucose-data/')\n        const data = await response.json()\n        this.data = data.data\n      } catch(error) {\n        console.error(error)\n      }\n    },\n\n\n  },\n\n  mounted() {\n    // TODO: initialize user session on server\n    this.getGlucoseData()\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  \n}\nfooter {\n  color: #f2f2f2;\n  background-color: #6e5773;\n  padding: 20px 0px 10px 0px;\n  font-size: 8pt;\n}\nfooter > span {\n  font-size: 10pt;\n}\n#banner {\n  color: white;\n  background-color: #6e5773;\n  padding: 10px 0px;\n}\n\n#banner > h1 {\n  color: white;\n  font-size: 50pt;\n  margin-bottom: 0px;\n}\n#banner > p {\n  font-size: 15pt;\n}\nbutton {\n  background-color: #d45d79;\n  border: 1px solid #d45d79;\n}\n\nbutton:hover {\n  background-color: #6e5773;\n  border: 1px solid #6e5773;;\n}\n</style>\n"]}]}