{"remainingRequest":"/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/src/components/GlucoseVis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/src/components/GlucoseVis.vue","mtime":1580686744274},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/frontend/sweettweet/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["GlucoseVis.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcfile":"GlucoseVis.vue","sourceRoot":"src/components","sourcesContent":["<!-- Visualize BG data -->\n<!-- Used in Live BG and historical BG (TODO) -->\n<!-- Props: pastData -->\n\n<template>\n\t<div id='vis-container'>\n\t\t<div id=\"vis\">\n\n\t</div>\n\t\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tname : 'glucose-vis',\n\n\t\tprops: {\n\t\t\tpastData: Array,\n\t\t\tforecastData: Array,\n\t\t\tdata: Array\n\t\t},\n\t\twatch: {\n\t\t\tdata: function(newVal) {\n\t\t\t\tif (newVal.length > 0) {\n\t\t\t\t\tthis.plotGlucose()\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\tplotGlucose() {\n\n\t\t\t\t// var vlSpec = {\n\t\t\t\t// \t$schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n\t\t\t\t// \tdata: {values: this.$props.pastData},\n\t\t\t\t// \twidth: 'container',\n\t\t\t\t// \theight: 'container',\n\t\t\t\t// \tlayer: [\n\t\t\t\t// \t{\n\t\t\t\t// \t\tdata: {\"values\": [{\"Glucose\": 0}, {'Glucose' : 70}]},\n\t\t\t\t// \t\tmark: 'rect',\n\t\t\t\t// \t\tencoding: {\n\t\t\t\t// \t\t\ty: {aggregate: 'max', field: 'Glucose', type: 'quantitative'},\n\t\t\t\t// \t\t\ty2: {aggregate: 'min', field: 'Glucose', type: 'quantitative'},\n\t\t\t\t// \t\t\topacity: {value: 0.2},\n\t\t\t\t// \t\t\tcolor: {value: \"#d45d79\"}\n\t\t\t\t// \t\t}\n\t\t\t\t// \t},\n\t\t\t\t// \t{\n\t\t\t\t// \t\tdata: {\"values\": [{\"Glucose\": 70}]},\n\t\t\t\t// \t\tmark: 'rule',\n\t\t\t\t// \t\tencoding: {\n\t\t\t\t// \t\t\ty: {field: 'Glucose', type: 'quantitative'},\n\t\t\t\t// \t\t\tcolor: {value: \"#d45d79\"},\n\t\t\t\t// \t\t\tsize: {value: 1}\n\t\t\t\t// \t\t}\n\t\t\t\t// \t},\n\t\t\t\t// \t{\n\t\t\t\t// \t\tmark: 'point',\n\t\t\t\t// \t\tencoding: {\n\t\t\t\t// \t\t\ty: {field: 'Glucose', type: 'quantitative', \n\t\t\t\t// \t\t\t\taxis: {title: 'Glucose (mg/dL)'}},\n\t\t\t\t// \t\t\tx: {field: 'Timestamp', type: 'temporal',axis: {title: 'Time'}},\n\t\t\t\t// \t\t\tsize: {value: 15},\n\t\t\t\t// \t\t\tcolor: {value: 'grey'}\n\t\t\t\t// \t\t}\n\t\t\t\t// \t},\n\t\t\t\t// \t{\n\t\t\t\t// \t\tdata: {values: this.$props.forecastData},\n\t\t\t\t// \t\tmark: {type : 'point', filled : \"true\"},\n\t\t\t\t// \t\tencoding: {\n\t\t\t\t// \t\t\ty: {field: 'Glucose', type: 'quantitative'},\n\t\t\t\t// \t\t\tx: {field: 'Timestamp', type: 'temporal',axis: {title: 'Time'}},\n\t\t\t\t// \t\t\tsize: {value: 45},\n\t\t\t\t// \t\t\tcolor: {value: '#ea9085'}\n\t\t\t\t// \t\t}\n\t\t\t\t// \t},\n\t\t\t\t// \t],\n\t\t\t\t// };\n\n\n\n\t\t\t\tconst vegaSpec = {\n  $schema: \"https://vega.github.io/schema/vega/v5.json\",\n  width: 700,\n  height: 400,\n  padding: 5,\n  background: \"white\",\n\n  config: {\n    axisBand: {\n      bandPosition: 0,\n      labelPadding: 7,\n      tickExtra: false\n    }\n  },\n\n  signals: [\n    {\n      name: \"tipYear\",\n      on: [{\n        events: \"@cell:mouseover\",\n        update: \"datum.forecastTime\"\n      }]\n    },\n    {\n      name: \"tipValue\",\n      on: [{\n        events: \"@cell:mouseover\",\n        update: \"datum.glucose\"\n      }]\n    }\n  ],\n\n  data: [\n    {\n      name: \"colors\",\n      values : [{type : \"measured\", color : \"grey\"},\n        {type : \"forecasted\", color : \"#ea9085\"}]\n    },\n    {\n      name: \"bg-levels\",\n      values: this.$props.data,\n      transform: [\n        {type: \"extent\",\n        field: \"forecastTime\",\n        signal: \"extentForecast\"\n        },\n        {type: \"extent\",\n        field: \"actualTime\",\n        signal: \"extentActual\"\n        },\n        { type: \"filter\", expr: \"datum.actualTime >= (extentActual[1] - 36000000)\" }\n      ]\n    },\n    {\n      name: \"bg-actual\",\n      source: \"bg-levels\",\n      transform: [\n        {type: \"filter\", expr: \"datum.forecastTime == datum.actualTime\" },\n        // {type: \"formula\", expr: \"scale('x', datum.forecastTime)\", as: \"xcoord\"},\n        // {type: \"formula\", expr: \"scale('y', datum.glucose)\", as: \"ycoord\"},\n        // {type: \"voronoi\", x: \"xcoord\", y: \"ycoord\", as: \"cell\", size: [{signal: \"width\"}, {signal: \"height\"}]}\n     ]\n    },\n    {\n      name: \"tooltip\",\n      source: \"bg-actual\",\n      transform: [\n        {\n          type: \"filter\",\n          expr: \"datum.forecastTime == tipYear && abs(datum.glucose - tipValue) <= 5\"\n        },\n        {\n          type: \"aggregate\",\n          fields: [\"glucose\", \"glucose\"],\n          ops: [\"min\", \"argmin\"],\n          as: [\"min\", \"argmin\"]\n        },\n        { type: \"formula\", as: \"tooltipYear\", expr: \"datum.argmin.actualTime\" }\n      ]\n    },\n    {\n      name: \"tooltip-forecast\",\n      source: \"bg-levels\",\n      transform: [\n        {\n          type: \"lookup\",\n          from: \"tooltip\", key: \"tooltipYear\",\n          fields: [\"actualTime\"], as: [\"tooltip\"]\n        },\n        { type: \"filter\", expr: \"datum.tooltip\" }\n      ]\n    },\n    {\n      name: \"latest-forecast\",\n      source: \"bg-levels\",\n      transform: [\n        { type: \"filter\", expr: \"datum.actualTime >= extentActual[1]\" }\n      ]\n    }\n  ],\n\n  scales: [\n\t{\n      name: \"x\",\n      type: \"time\",\n      domain: {\n        fields: [\n          {data: \"bg-levels\", field: \"forecastTime\"}\n        ]\n      },\n      \"range\": [0, {signal: \"width\"}]\n    },\n\n\n    {\n      name: \"y\",\n      type: \"linear\", zero: true,\n      domain: {data: \"bg-levels\", field: \"glucose\"},\n      range: \"height\"\n    },\n    {\n      name: \"color\",\n      type: \"ordinal\",\n      domain: {data: \"colors\", field: \"type\"},\n      range: {data: \"colors\", field: \"color\"}\n    }\n  ],\n\n  axes: [\n    {\n      orient: \"bottom\", scale: \"x\",\n      grid: true, domain: true,\n      tickSize: 5, title: \"Time\",\n      encode: {\n        grid: {\n          enter: {\n            stroke: {value: \"#f2f2f2\"},\n            strokeOpacity: {value: 0.75}\n          }\n        }\n      }\n    },\n    {\n      orient: \"left\", scale: \"y\",\n      grid: true, \"domain\": true,\n      tickSize: 8, title : \"Glucose level (mg/dL)\",\n      encode: {\n        grid: {\n          enter: {\n            stroke: {value: \"#f2f2f2\"},\n            strokeOpacity: {value: 0.75}\n          }\n        }\n      }\n    }\n  ],\n  legends: [\n    {\n      stroke: \"color\",\n      title: \"\",\n      padding: 4,\n      encode: {\n        symbols: {\n          enter: {\n            strokeWidth: {value: 2},\n            size: {value: 50}\n          }\n        }\n      }\n    }\n  ],\n\n  marks: [\n    {\n      type: \"rule\",\n      encode: {\n        enter: {\n          y: {scale: \"y\", value: 70},\n          stroke: {value: \"#ea9085\"},\n          strokeWidth: {value: 2},\n          x: {value: 0},\n          x2: {field: {group: \"width\"}}\n        }\n      }\n    },\n    {\n      type: \"symbol\",\n      from: {data: \"latest-forecast\"},\n      encode: {\n        update: {\n          x: {scale: \"x\", field: \"forecastTime\"},\n          y: {scale: \"y\", field: \"glucose\"},\n          fill: {value: \"#ea9085\"},\n          stroke: {value: 'grey'},\n          strokeWidth: {value: 1},\n          size: {value: 75}\n        }\n      }\n    },\n    {\n      type: \"symbol\",\n      from: {data: \"tooltip-forecast\"},\n      encode: {\n        update: {\n          x: {scale: \"x\", field: \"forecastTime\"},\n          y: {scale: \"y\", field: \"glucose\"},\n          fill: {value: \"#ea9085\"},\n          stroke: {value: \"grey\"},\n          strokeWidth: {value: 1}\n        }\n      }\n    },\n    {\n      name: \"actual\",\n      type: \"symbol\",\n      from: {\"data\": \"bg-actual\"},\n      encode: {\n        update: {\n          x: {scale: \"x\", field: \"forecastTime\"},\n          y: {scale: \"y\", field: \"glucose\"},\n          stroke: {value: \"grey\"},\n          strokeWidth: {value: 2},\n        }\n      }\n    },\n\n    // {\n    //   \"type\": \"path\",\n    //   \"name\": \"cell\",\n    //   \"from\": {\"data\": \"bg-actual\"},\n    //   \"encode\": {\n    //     \"enter\": {\n    //       \"fill\": {\"value\": \"transparent\"},\n    //       \"strokeWidth\": {\"value\": 0.35},\n    //       \"stroke\": {\"value\": \"transparent\"},\n    //       \"path\": {\"field\": \"cell\"}\n    //     }\n    //   }\n    // }\n    {\n      name: \"cell\",\n      type: \"symbol\",\n      from: {\"data\": \"bg-actual\"},\n      encode: {\n        update: {\n          x: {scale: \"x\", field: \"forecastTime\"},\n          y: {scale: \"y\", field: \"glucose\"},\n          fill: {value: \"transparent\"},\n          opacity: {value: 0.5},\n          strokeWidth: {value: 2},\n          size: {value: 500}\n        }\n      }\n    }\n  ]\n}\n\n\t\t\t// Embed the visualization in the container with id `vis`\n\t\t\twindow.vegaEmbed('#vis', vegaSpec, {renderer: 'svg'}).then((result) => (window.vegaView = result.view));\n\t\t},\n\t},\n}\n\n\n</script>\n\n<style scoped>\n#vis {\n\twidth: 70%;\n\theight: 300px;\n}\n#vis-container {\n\tpadding-bottom: 20px;\n}\n</style>"]}]}