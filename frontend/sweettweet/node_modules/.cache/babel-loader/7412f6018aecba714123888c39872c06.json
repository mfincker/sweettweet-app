{"remainingRequest":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/thread-loader/dist/cjs.js!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/babel-loader/lib/index.js!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/src/App.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/src/App.vue","mtime":1580435521175},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9Vc2Vycy9tYWV2YS9Ecm9wYm94L0luc2lnaHQvcHJvamVjdC9oeXBvZnJlZS1hcHAvdnVlLWFwcC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBHbHVjb3NlVmlzIGZyb20gJ0AvY29tcG9uZW50cy9HbHVjb3NlVmlzLnZ1ZSc7CmltcG9ydCBHbHVjb3NlRm9ybSBmcm9tICdAL2NvbXBvbmVudHMvR2x1Y29zZUZvcm0udnVlJzsKaW1wb3J0IFBob25lRm9ybSBmcm9tICdAL2NvbXBvbmVudHMvUGhvbmVGb3JtLnZ1ZSc7CmltcG9ydCBVc2VyRm9ybSBmcm9tICdAL2NvbXBvbmVudHMvVXNlckZvcm0udnVlJzsgLy8gQ2hhbmdlIGJhc2VfdXJsIHdoZW4gZGVwbG95ZWQgLSBGbGFzayBzZXJ2ZXIgYmFzZV91cmwKCnZhciBiYXNlX3VybCA9ICdodHRwOi8vMTI3LjAuMC4xOjUwMDAvJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdhcHAnLAogIGNvbXBvbmVudHM6IHsKICAgIFBob25lRm9ybTogUGhvbmVGb3JtLAogICAgR2x1Y29zZVZpczogR2x1Y29zZVZpcywKICAgIEdsdWNvc2VGb3JtOiBHbHVjb3NlRm9ybSwKICAgIFVzZXJGb3JtOiBVc2VyRm9ybQogIH0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHBob25lTnVtYmVyOiAiIiwKICAgICAgcGFzdERhdGE6IFtdLAogICAgICBmb3JlY2FzdERhdGE6IFtdLAogICAgICBuZXdCRzogIiIsCiAgICAgIGFsYXJtOiAwLAogICAgICB1c2VySW5mbzoge30KICAgIH07CiAgfSwKICBtZXRob2RzOiB7CiAgICAvLyBVcGRhdGUgcGhvbmVOdW1iZXIgc3RhdGUKICAgIGFkZFBob25lTnVtYmVyOiBmdW5jdGlvbiBhZGRQaG9uZU51bWJlcihuZXdQaG9uZU51bWJlcikgewogICAgICB0aGlzLnBob25lTnVtYmVyID0gbmV3UGhvbmVOdW1iZXI7CiAgICB9LAogICAgc2V0VXNlckluZm86IGZ1bmN0aW9uIHNldFVzZXJJbmZvKHVzZXJJbmZvKSB7CiAgICAgIHRoaXMudXNlckluZm8gPSB1c2VySW5mbzsKICAgIH0sCiAgICAvLyBQT1NUIG5ldyBCRyBtZWFzdXJlbWVudCAtIHJldHVybnMgZnVsbCBsaXZlIGdsdWNvc2UgZGF0YSArIG1vZGVsIG91dHB1dCAtIFRPRE8KICAgIGFkZE5ld0JHOiBmdW5jdGlvbiAoKSB7CiAgICAgIHZhciBfYWRkTmV3QkcgPSBfYXN5bmNUb0dlbmVyYXRvcigKICAgICAgLyojX19QVVJFX18qLwogICAgICByZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKG5ld0JHKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goYmFzZV91cmwgKyAnYXBpL3VwZGF0ZS1nbHVjb3NlJywgewogICAgICAgICAgICAgICAgICBtZXRob2Q6ICdQT1NUJywKICAgICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoewogICAgICAgICAgICAgICAgICAgICduZXdCRyc6IG5ld0JHLAogICAgICAgICAgICAgICAgICAgICdwYXN0RGF0YSc6IHRoaXMucGFzdERhdGEsCiAgICAgICAgICAgICAgICAgICAgJ3Bob25lTnVtYmVyJzogdGhpcy5waG9uZU51bWJlciwKICAgICAgICAgICAgICAgICAgICAnYWxhcm0nOiB0aGlzLmFsYXJtLAogICAgICAgICAgICAgICAgICAgICd1c2VySW5mbyc6IHRoaXMudXNlckluZm8KICAgICAgICAgICAgICAgICAgfSksCiAgICAgICAgICAgICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICAgICAgICAgICAnQ29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL2pzb247IGNoYXJzZXQ9VVRGLTgnCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gNjsKICAgICAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7CgogICAgICAgICAgICAgIGNhc2UgNjoKICAgICAgICAgICAgICAgIGRhdGEgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgLy8gc2VydmVyIHNob3VsZCByZXR1cm4gdGhlIHBob25lIG51bWJlcgogICAgICAgICAgICAgICAgdGhpcy5uZXdCRyA9IGRhdGEubmV3Qkc7CiAgICAgICAgICAgICAgICB0aGlzLnBhc3REYXRhID0gZGF0YS5wYXN0RGF0YTsKICAgICAgICAgICAgICAgIHRoaXMuZm9yZWNhc3REYXRhID0gZGF0YS5mb3JlY2FzdERhdGE7CiAgICAgICAgICAgICAgICB0aGlzLmFsYXJtID0gZGF0YS5hbGFybTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNjsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDEzOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDEzOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQudDApOwoKICAgICAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcywgW1swLCAxM11dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gYWRkTmV3QkcoX3gpIHsKICAgICAgICByZXR1cm4gX2FkZE5ld0JHLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBhZGROZXdCRzsKICAgIH0oKSwKICAgIC8vIEdldCBsaXZlIHBhc3REYXRhIGZyb20gdXNlciBzZXNzaW9uCiAgICBnZXRHbHVjb3NlRGF0YTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldEdsdWNvc2VEYXRhID0gX2FzeW5jVG9HZW5lcmF0b3IoCiAgICAgIC8qI19fUFVSRV9fKi8KICAgICAgcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIHJlc3BvbnNlLCBkYXRhOwogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlMiQoX2NvbnRleHQyKSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0Mi5wcmV2ID0gX2NvbnRleHQyLm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgICAgICBfY29udGV4dDIubmV4dCA9IDM7CiAgICAgICAgICAgICAgICByZXR1cm4gZmV0Y2goYmFzZV91cmwgKyAnYXBpL2dsdWNvc2UtZGF0YScpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICByZXNwb25zZSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA2OwogICAgICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTsKCiAgICAgICAgICAgICAgY2FzZSA2OgogICAgICAgICAgICAgICAgZGF0YSA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgdGhpcy5wYXN0RGF0YSA9IGRhdGEucGFzdERhdGE7CiAgICAgICAgICAgICAgICB0aGlzLmZvcmVjYXN0RGF0YSA9IGRhdGEuZm9yZWNhc3REYXRhOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxMTsKICAgICAgICAgICAgICAgIF9jb250ZXh0Mi50MCA9IF9jb250ZXh0MlsiY2F0Y2giXSgwKTsKICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoX2NvbnRleHQyLnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5zdG9wKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCBfY2FsbGVlMiwgdGhpcywgW1swLCAxMV1dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gZ2V0R2x1Y29zZURhdGEoKSB7CiAgICAgICAgcmV0dXJuIF9nZXRHbHVjb3NlRGF0YS5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICB9CgogICAgICByZXR1cm4gZ2V0R2x1Y29zZURhdGE7CiAgICB9KCkKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICAvLyBUT0RPOiBpbml0aWFsaXplIHVzZXIgc2Vzc2lvbiBvbiBzZXJ2ZXIKICAgIHRoaXMuZ2V0R2x1Y29zZURhdGEoKTsKICB9Cn07"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAYA,OAAA,UAAA,MAAA,6BAAA;AACA,OAAA,WAAA,MAAA,8BAAA;AACA,OAAA,SAAA,MAAA,4BAAA;AACA,OAAA,QAAA,MAAA,2BAAA,C,CAEA;;AACA,IAAA,QAAA,GAAA,wBAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,KADA;AAEA,EAAA,UAAA,EAAA;AACA,IAAA,SAAA,EAAA,SADA;AAEA,IAAA,UAAA,EAAA,UAFA;AAGA,IAAA,WAAA,EAAA,WAHA;AAIA,IAAA,QAAA,EAAA;AAJA,GAFA;AASA,EAAA,IATA,kBASA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,EADA;AAEA,MAAA,QAAA,EAAA,EAFA;AAGA,MAAA,YAAA,EAAA,EAHA;AAIA,MAAA,KAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA,CALA;AAMA,MAAA,QAAA,EAAA;AANA,KAAA;AAQA,GAlBA;AAoBA,EAAA,OAAA,EAAA;AAEA;AACA,IAAA,cAHA,0BAGA,cAHA,EAGA;AACA,WAAA,WAAA,GAAA,cAAA;AACA,KALA;AAOA,IAAA,WAPA,uBAOA,QAPA,EAOA;AACA,WAAA,QAAA,GAAA,QAAA;AACA,KATA;AAWA;AACA,IAAA,QAZA;AAAA;AAAA;AAAA,+CAYA,KAZA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAcA,KAAA,CAAA,QAAA,GAAA,oBAAA,EAAA;AACA,kBAAA,MAAA,EAAA,MADA;AAEA,kBAAA,IAAA,EAAA,IAAA,CAAA,SAAA,CAAA;AAAA,6BAAA,KAAA;AACA,gCAAA,KAAA,QADA;AAEA,mCAAA,KAAA,WAFA;AAGA,6BAAA,KAAA,KAHA;AAIA,gCAAA,KAAA;AAJA,mBAAA,CAFA;AAOA,kBAAA,OAAA,EAAA;AAAA,oCAAA;AAAA;AAPA,iBAAA,CAdA;;AAAA;AAcA,gBAAA,QAdA;AAAA;AAAA,uBAuBA,QAAA,CAAA,IAAA,EAvBA;;AAAA;AAuBA,gBAAA,IAvBA;AAuBA;AACA,qBAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AACA,qBAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AACA,qBAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AACA,qBAAA,KAAA,GAAA,IAAA,CAAA,KAAA;AA3BA;AAAA;;AAAA;AAAA;AAAA;AA6BA,gBAAA,OAAA,CAAA,KAAA;;AA7BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAiCA;AACA,IAAA,cAlCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAoCA,KAAA,CAAA,QAAA,GAAA,kBAAA,CApCA;;AAAA;AAoCA,gBAAA,QApCA;AAAA;AAAA,uBAqCA,QAAA,CAAA,IAAA,EArCA;;AAAA;AAqCA,gBAAA,IArCA;AAsCA,qBAAA,QAAA,GAAA,IAAA,CAAA,QAAA;AACA,qBAAA,YAAA,GAAA,IAAA,CAAA,YAAA;AAvCA;AAAA;;AAAA;AAAA;AAAA;AAyCA,gBAAA,OAAA,CAAA,KAAA;;AAzCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,GApBA;AAoEA,EAAA,OApEA,qBAoEA;AACA;AACA,SAAA,cAAA;AACA;AAvEA,CAAA","sourcesContent":["<template>\n  <div id=\"app\">\n    <h1>SweetTweet</h1>\n    <p>Helping you prevent hypoglycemia</p>\n    <user-form @add:userInfo=\"setUserInfo\" :userInfo=\"userInfo\" />\n    <phone-form @add:newPhoneNumber=\"addPhoneNumber\" :phoneNumber=\"phoneNumber\"/>\n    <glucose-form @add:newBG=\"addNewBG\" />\n    <glucose-vis :pastData=\"pastData\" :forecastData=\"forecastData\"/>\n  </div>\n</template>\n\n<script>\nimport GlucoseVis from '@/components/GlucoseVis.vue'\nimport GlucoseForm from '@/components/GlucoseForm.vue'\nimport PhoneForm from '@/components/PhoneForm.vue'\nimport UserForm from '@/components/UserForm.vue'\n\n// Change base_url when deployed - Flask server base_url\nconst base_url = 'http://127.0.0.1:5000/'\n\nexport default {\n  name: 'app',\n  components: {\n    PhoneForm,\n    GlucoseVis,\n    GlucoseForm,\n    UserForm\n  },\n\n  data() {\n    return {\n      phoneNumber: \"\",\n      pastData: [],\n      forecastData: [],\n      newBG: \"\",\n      alarm: 0,\n      userInfo: {},\n    }\n  },\n\n  methods: {\n\n    // Update phoneNumber state\n    addPhoneNumber(newPhoneNumber) {\n      this.phoneNumber = newPhoneNumber\n    },\n\n    setUserInfo(userInfo) {\n      this.userInfo = userInfo\n    },\n\n    // POST new BG measurement - returns full live glucose data + model output - TODO\n    async addNewBG(newBG) {\n      try {\n        const response = await fetch(base_url + 'api/update-glucose', {\n          method: 'POST',\n          body: JSON.stringify({'newBG' : newBG,\n                                'pastData': this.pastData,\n                                'phoneNumber' : this.phoneNumber,\n                                'alarm' : this.alarm,\n                                'userInfo' : this.userInfo}),\n          headers: {'Content-type' : 'application/json; charset=UTF-8', }\n        })\n        const data = await response.json() // server should return the phone number\n        this.newBG = data.newBG\n        this.pastData = data.pastData\n        this.forecastData = data.forecastData\n        this.alarm = data.alarm\n      } catch(error) {\n        console.error(error)\n      }\n    },\n\n    // Get live pastData from user session\n    async getGlucoseData() {\n      try {\n        const response = await fetch(base_url + 'api/glucose-data')\n        const data = await response.json()\n        this.pastData = data.pastData\n        this.forecastData = data.forecastData\n      } catch(error) {\n        console.error(error)\n      }\n    },\n\n\n  },\n\n  mounted() {\n    // TODO: initialize user session on server\n    this.getGlucoseData()\n  },\n}\n</script>\n\n<style>\n#app {\n  font-family: 'Avenir', Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n</style>\n"],"sourceRoot":"src"}]}