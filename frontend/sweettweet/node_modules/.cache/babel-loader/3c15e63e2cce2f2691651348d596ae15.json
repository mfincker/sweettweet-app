{"remainingRequest":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/thread-loader/dist/cjs.js!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/babel-loader/lib/index.js!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/src/components/GlucoseVis.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/src/components/GlucoseVis.vue","mtime":1580255964263},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/thread-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/maeva/Dropbox/Insight/project/hypofree-app/vue-app/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdnbHVjb3NlLXZpcycsCiAgcHJvcHM6IHsKICAgIHBhc3REYXRhOiBBcnJheSwKICAgIGZvcmVjYXN0RGF0YTogQXJyYXkKICB9LAogIHdhdGNoOiB7CiAgICBwYXN0RGF0YTogZnVuY3Rpb24gcGFzdERhdGEobmV3VmFsKSB7CiAgICAgIGlmIChuZXdWYWwubGVuZ3RoID4gMCkgewogICAgICAgIHRoaXMucGxvdEdsdWNvc2UoKTsKICAgICAgfQogICAgfQogIH0sCiAgbWV0aG9kczogewogICAgcGxvdEdsdWNvc2U6IGZ1bmN0aW9uIHBsb3RHbHVjb3NlKCkgewogICAgICAvLyAJdmFyIHZsU3BlYyA9IHsKICAgICAgLy8gCQkkc2NoZW1hOiAnaHR0cHM6Ly92ZWdhLmdpdGh1Yi5pby9zY2hlbWEvdmVnYS1saXRlL3Y0Lmpzb24nLAogICAgICAvLyAJCWRhdGE6IHt2YWx1ZXM6IHRoaXMuJHByb3BzLnBhc3REYXRhfSwKICAgICAgLy8gCQl3aWR0aDogJ2NvbnRhaW5lcicsCiAgICAgIC8vIAkJbWFyazogJ3BvaW50JywKICAgICAgLy8gCQllbmNvZGluZzogewogICAgICAvLyAJCQl5OiB7ZmllbGQ6ICdHbHVjb3NlJywgdHlwZTogJ3F1YW50aXRhdGl2ZSd9LAogICAgICAvLyAJCQl4OiB7ZmllbGQ6ICdUaW1lc3RhbXAnLCB0eXBlOiAndGVtcG9yYWwnLGF4aXM6IHt0aXRsZTogJ0dsdWNvc2UgbGV2ZWxzJ30KICAgICAgLy8gCQl9CiAgICAgIC8vIAl9CiAgICAgIC8vIH07CiAgICAgIHZhciB2bFNwZWMgPSB7CiAgICAgICAgJHNjaGVtYTogJ2h0dHBzOi8vdmVnYS5naXRodWIuaW8vc2NoZW1hL3ZlZ2EtbGl0ZS92NC5qc29uJywKICAgICAgICBkYXRhOiB7CiAgICAgICAgICB2YWx1ZXM6IHRoaXMuJHByb3BzLnBhc3REYXRhCiAgICAgICAgfSwKICAgICAgICB3aWR0aDogJ2NvbnRhaW5lcicsCiAgICAgICAgaGVpZ2h0OiAnY29udGFpbmVyJywKICAgICAgICBsYXllcjogW3sKICAgICAgICAgIGRhdGE6IHsKICAgICAgICAgICAgInZhbHVlcyI6IFt7CiAgICAgICAgICAgICAgIkdsdWNvc2UiOiA3MAogICAgICAgICAgICB9XQogICAgICAgICAgfSwKICAgICAgICAgIG1hcms6ICdydWxlJywKICAgICAgICAgIGVuY29kaW5nOiB7CiAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICBmaWVsZDogJ0dsdWNvc2UnLAogICAgICAgICAgICAgIHR5cGU6ICdxdWFudGl0YXRpdmUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNvbG9yOiB7CiAgICAgICAgICAgICAgdmFsdWU6ICJibGFjayIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgc2l6ZTogewogICAgICAgICAgICAgIHZhbHVlOiAxCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBtYXJrOiAncG9pbnQnLAogICAgICAgICAgZW5jb2Rpbmc6IHsKICAgICAgICAgICAgeTogewogICAgICAgICAgICAgIGZpZWxkOiAnR2x1Y29zZScsCiAgICAgICAgICAgICAgdHlwZTogJ3F1YW50aXRhdGl2ZScKICAgICAgICAgICAgfSwKICAgICAgICAgICAgeDogewogICAgICAgICAgICAgIGZpZWxkOiAnVGltZXN0YW1wJywKICAgICAgICAgICAgICB0eXBlOiAndGVtcG9yYWwnLAogICAgICAgICAgICAgIGF4aXM6IHsKICAgICAgICAgICAgICAgIHRpdGxlOiAnVGltZScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHNpemU6IHsKICAgICAgICAgICAgICB2YWx1ZTogMTUKICAgICAgICAgICAgfSwKICAgICAgICAgICAgY29sb3I6IHsKICAgICAgICAgICAgICB2YWx1ZTogJ2dyZXknCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9LCB7CiAgICAgICAgICBkYXRhOiB7CiAgICAgICAgICAgIHZhbHVlczogdGhpcy4kcHJvcHMuZm9yZWNhc3REYXRhCiAgICAgICAgICB9LAogICAgICAgICAgbWFyazogJ3BvaW50JywKICAgICAgICAgIGVuY29kaW5nOiB7CiAgICAgICAgICAgIHk6IHsKICAgICAgICAgICAgICBmaWVsZDogJ0dsdWNvc2UnLAogICAgICAgICAgICAgIHR5cGU6ICdxdWFudGl0YXRpdmUnCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHg6IHsKICAgICAgICAgICAgICBmaWVsZDogJ1RpbWVzdGFtcCcsCiAgICAgICAgICAgICAgdHlwZTogJ3RlbXBvcmFsJywKICAgICAgICAgICAgICBheGlzOiB7CiAgICAgICAgICAgICAgICB0aXRsZTogJ1RpbWUnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBzaXplOiB7CiAgICAgICAgICAgICAgdmFsdWU6IDIwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGNvbG9yOiB7CiAgICAgICAgICAgICAgdmFsdWU6ICdyZWQnCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9XQogICAgICB9OyAvLyBFbWJlZCB0aGUgdmlzdWFsaXphdGlvbiBpbiB0aGUgY29udGFpbmVyIHdpdGggaWQgYHZpc2AKCiAgICAgIHdpbmRvdy52ZWdhRW1iZWQoJyN2aXMnLCB2bFNwZWMpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["GlucoseVis.vue"],"names":[],"mappings":";;;;;;;;;AAUA,eAAA;AACA,EAAA,IAAA,EAAA,aADA;AAGA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,KADA;AAEA,IAAA,YAAA,EAAA;AAFA,GAHA;AAOA,EAAA,KAAA,EAAA;AACA,IAAA,QAAA,EAAA,kBAAA,MAAA,EAAA;AACA,UAAA,MAAA,CAAA,MAAA,GAAA,CAAA,EAAA;AACA,aAAA,WAAA;AACA;AACA;AALA,GAPA;AAeA,EAAA,OAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,UAAA,MAAA,GAAA;AACA,QAAA,OAAA,EAAA,iDADA;AAEA,QAAA,IAAA,EAAA;AAAA,UAAA,MAAA,EAAA,KAAA,MAAA,CAAA;AAAA,SAFA;AAGA,QAAA,KAAA,EAAA,WAHA;AAIA,QAAA,MAAA,EAAA,WAJA;AAKA,QAAA,KAAA,EAAA,CACA;AACA,UAAA,IAAA,EAAA;AAAA,sBAAA,CAAA;AAAA,yBAAA;AAAA,aAAA;AAAA,WADA;AAEA,UAAA,IAAA,EAAA,MAFA;AAGA,UAAA,QAAA,EAAA;AACA,YAAA,CAAA,EAAA;AAAA,cAAA,KAAA,EAAA,SAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aADA;AAEA,YAAA,KAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAFA;AAGA,YAAA,IAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA;AAHA;AAHA,SADA,EAUA;AACA,UAAA,IAAA,EAAA,OADA;AAEA,UAAA,QAAA,EAAA;AACA,YAAA,CAAA,EAAA;AAAA,cAAA,KAAA,EAAA,SAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aADA;AAEA,YAAA,CAAA,EAAA;AAAA,cAAA,KAAA,EAAA,WAAA;AAAA,cAAA,IAAA,EAAA,UAAA;AAAA,cAAA,IAAA,EAAA;AAAA,gBAAA,KAAA,EAAA;AAAA;AAAA,aAFA;AAGA,YAAA,IAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAHA;AAIA,YAAA,KAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA;AAJA;AAFA,SAVA,EAmBA;AACA,UAAA,IAAA,EAAA;AAAA,YAAA,MAAA,EAAA,KAAA,MAAA,CAAA;AAAA,WADA;AAEA,UAAA,IAAA,EAAA,OAFA;AAGA,UAAA,QAAA,EAAA;AACA,YAAA,CAAA,EAAA;AAAA,cAAA,KAAA,EAAA,SAAA;AAAA,cAAA,IAAA,EAAA;AAAA,aADA;AAEA,YAAA,CAAA,EAAA;AAAA,cAAA,KAAA,EAAA,WAAA;AAAA,cAAA,IAAA,EAAA,UAAA;AAAA,cAAA,IAAA,EAAA;AAAA,gBAAA,KAAA,EAAA;AAAA;AAAA,aAFA;AAGA,YAAA,IAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA,aAHA;AAIA,YAAA,KAAA,EAAA;AAAA,cAAA,KAAA,EAAA;AAAA;AAJA;AAHA,SAnBA;AALA,OAAA,CAbA,CAiDA;;AACA,MAAA,MAAA,CAAA,SAAA,CAAA,MAAA,EAAA,MAAA;AACA;AApDA;AAfA,CAAA","sourcesContent":["<!-- Visualize BG data -->\n<!-- Used in Live BG and historical BG (TODO) -->\n<!-- Props: pastData -->\n\n<template>\n\t<div id=\"vis\">\n\t</div>\n</template>\n\n<script>\n\texport default {\n\t\tname : 'glucose-vis',\n\n\t\tprops: {\n\t\t\tpastData: Array,\n\t\t\tforecastData: Array,\n\t\t},\n\t\twatch: {\n\t\t\tpastData: function(newVal) {\n\t\t\t\tif (newVal.length > 0) {\n\t\t\t\t\tthis.plotGlucose()\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\n\t\tmethods: {\n\t\t\tplotGlucose() {\n\t\t\t// \tvar vlSpec = {\n\t\t\t// \t\t$schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n\t\t\t// \t\tdata: {values: this.$props.pastData},\n\t\t\t// \t\twidth: 'container',\n\t\t\t// \t\tmark: 'point',\n\t\t\t// \t\tencoding: {\n\t\t\t// \t\t\ty: {field: 'Glucose', type: 'quantitative'},\n\t\t\t// \t\t\tx: {field: 'Timestamp', type: 'temporal',axis: {title: 'Glucose levels'}\n\t\t\t// \t\t}\n\t\t\t// \t}\n\t\t\t// };\n\n\t\t\t\tvar vlSpec = {\n\t\t\t\t\t$schema: 'https://vega.github.io/schema/vega-lite/v4.json',\n\t\t\t\t\tdata: {values: this.$props.pastData},\n\t\t\t\t\twidth: 'container',\n\t\t\t\t\theight: 'container',\n\t\t\t\t\tlayer: [\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {\"values\": [{\"Glucose\": 70}]},\n\t\t\t\t\t\tmark: 'rule',\n\t\t\t\t\t\tencoding: {\n\t\t\t\t\t\t\ty: {field: 'Glucose', type: 'quantitative'},\n\t\t\t\t\t\t\tcolor: {value: \"black\"},\n\t\t\t\t\t\t\tsize: {value: 1}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tmark: 'point',\n\t\t\t\t\t\tencoding: {\n\t\t\t\t\t\t\ty: {field: 'Glucose', type: 'quantitative'},\n\t\t\t\t\t\t\tx: {field: 'Timestamp', type: 'temporal',axis: {title: 'Time'}},\n\t\t\t\t\t\t\tsize: {value: 15},\n\t\t\t\t\t\t\tcolor: {value: 'grey'}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t{\n\t\t\t\t\t\tdata: {values: this.$props.forecastData},\n\t\t\t\t\t\tmark: 'point',\n\t\t\t\t\t\tencoding: {\n\t\t\t\t\t\t\ty: {field: 'Glucose', type: 'quantitative'},\n\t\t\t\t\t\t\tx: {field: 'Timestamp', type: 'temporal',axis: {title: 'Time'}},\n\t\t\t\t\t\t\tsize: {value: 20},\n\t\t\t\t\t\t\tcolor: {value: 'red'}\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\t]\n\t\t\t\t};\n\t\t\t// Embed the visualization in the container with id `vis`\n\t\t\twindow.vegaEmbed('#vis', vlSpec);\n\t\t},\n\t},\n}\n\n\n</script>\n\n<style scoped>\n\t#vis {\n\t\twidth: 80%;\n\t\theight: 300px\n\t}\n</style>"],"sourceRoot":"src/components"}]}